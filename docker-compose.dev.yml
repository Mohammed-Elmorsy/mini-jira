version: "3.8"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      POSTGRES_DB: ${DATABASE_DB:-mini_jira_dev}
    volumes:
      - pg_data_dev:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: mini-jira-api:dev
    restart: unless-stopped
    env_file:
      - ./api/.env.development
    environment:
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    command: ["./docker-entrypoint.sh"]

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: mini-jira-web:dev
    args:
      VITE_API_URL: http://api:3000
    restart: unless-stopped
    environment:
      NODE_ENV: development
    ports:
      - "5173:5173"
    volumes:
      - ./web:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app_network
    command: ["npm", "start"]

volumes:
  pg_data_dev:

networks:
  app_network:
